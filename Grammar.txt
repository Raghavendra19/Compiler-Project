<program> -> <moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations> -> <moduleDeclaration> <moduleDeclarations>
<moduleDeclarations> -> eps
<moduleDeclaration> -> DECLARE MODULE ID SEMICOL
<otherModules> -> <module> <otherModules>
<otherModules> -> eps
<driverModule> -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module> -> DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret> -> RETURNS SQBO <output_plist> SQBC SEMICOL
<ret> -> eps
<input_plist> -> ID COLON <dataType> <N1>
<N1> -> COMMA ID COLON <dataType> <N1>
<N1> -> eps
<output_plist> -> ID COLON <type> <N2>
<N2> -> COMMA ID COLON <type> <N2>
<N2> -> eps
<dataType> -> ARRAY SQBO <range_arrays> SQBC OF <type>
<dataType> -> INTEGER
<dataType> -> REAL
<dataType> -> BOOLEAN
<range_arrays> -> <Index> RANGEOP <Index>
<type> -> INTEGER
<type> -> REAL
<type> -> BOOLEAN
<moduleDef> -> START <statements> END
<statements> -> <statement> <statements>
<statements> -> eps
<statement> -> <ioStmt>
<statement> -> <simpleStmt>
<statement> -> <declareStmt>
<statement> -> <conditionalStmt>
<statement> -> <iterativeStmt>
<iterativeStmt> -> FOR BO ID IN <range> BC START <statements> END
<iterativeStmt> -> WHILE BO <arithmeticOrBooleanExpr> BC START <statements> END
<ioStmt> -> GET_VALUE BO ID BC SEMICOL
<ioStmt> -> PRINT BO <var> BC SEMICOL
<var> -> <var_id_num>
<var> -> <boolConstt>
<whichId> -> SQBO <Index> SQBC
<whichId> -> eps
<simpleStmt> -> <assignmentStmt>
<simpleStmt> -> <moduleReuseStmt>
<assignmentStmt> -> ID <whichStmt>
<whichStmt> -> <lvalueIDStmt>
<whichStmt> -> <lvalueARRStmt>
<lvalueIDStmt> -> ASSIGNOP <expression> SEMICOL
<lvalueARRStmt> -> SQBO <Index> SQBC ASSIGNOP <expression> SEMICOL
<Index> -> NUM
<Index> -> ID
<moduleReuseStmt> -> <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional> -> SQBO <idList> SQBC ASSIGNOP
<optional> -> eps
<idList> -> ID <N3>
<N3> -> COMMA ID <N3>
<N3> -> eps
<expression> -> <arithmeticOrBooleanExpr>
<expression> -> <U>
<U> -> <op1> <new_NT>
<new_NT> -> BO <arithmeticExpr> BC
<new_NT> -> <var_id_num>
<arithmeticOrBooleanExpr> -> <AnyTerm> <N7>
<N7> -> <logicalOp> <AnyTerm> <N7>
<N7> -> eps
<AnyTerm> -> <arithmeticExpr> <N8>
<AnyTerm> -> <boolConstt>
<boolConstt> -> TRUE
<boolConstt> -> FALSE
<N8> -> <relationalOp> <arithmeticExpr>
<N8> -> eps
<arithmeticExpr> -> <term> <N4>
<N4> -> <op1> <term> <N4>
<N4> -> eps
<term> -> <factor> <N5>
<N5> -> <op2> <factor> <N5>
<N5> -> eps
<factor> -> BO <arithmeticOrBooleanExpr> BC
<factor> -> <var_id_num>
<var_id_num> -> ID <whichId>
<var_id_num> -> NUM
<var_id_num> -> RNUM
<op1> -> PLUS
<op1> -> MINUS
<op2> -> MUL
<op2> -> DIV
<logicalOp> -> AND
<logicalOp> -> OR
<relationalOp> -> LT
<relationalOp> -> LE
<relationalOp> -> GT
<relationalOp> -> GE
<relationalOp> -> EQ
<relationalOp> -> NE
<declareStmt> -> DECLARE <idList> COLON <dataType> SEMICOL
<conditionalStmt> -> SWITCH BO ID BC START <caseStmts> <Default> END
<caseStmts> -> CASE <value> COLON <statements> BREAK SEMICOL <N9>
<N9> -> CASE <value> COLON <statements> BREAK SEMICOL <N9>
<N9> -> eps
<value> -> NUM
<value> -> TRUE
<value> -> FALSE
<Default> -> DEFAULT COLON <statements> BREAK SEMICOL
<Default> -> eps
<range> -> NUM RANGEOP NUM

